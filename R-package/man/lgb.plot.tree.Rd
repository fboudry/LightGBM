% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lgb.plot.tree.R
\name{lgb.plot.tree}
\alias{lgb.plot.tree}
\title{Plot a single LightGBM tree using DiagrammeR.}
\usage{
lgb.plot.tree(model = NULL, tree = NULL, rules = NULL)
}
\arguments{
\item{model}{a \code{lgb.Booster} object.}

\item{tree}{an integer specifying the tree to plot.}

\item{rules}{a list of rules to replace the split values with feature levels.}
}
\value{
The \code{lgb.plot.tree} function creates a DiagrammeR plot.
}
\description{
The \code{lgb.plot.tree} function creates a DiagrammeR plot of a single LightGBM tree.
}
\details{
The \code{lgb.plot.tree} function creates a DiagrammeR plot of a single LightGBM tree. The tree is extracted from the model and displayed as a directed graph. The nodes are labelled with the feature, split value, gain, cover and value. The edges are labelled with the decision type and split value. The nodes are styled with a rectangle shape and filled with a beige colour. Leaf nodes are styled with an oval shape and filled with a khaki colour. The graph is rendered using the dot layout with a left-to-right rank direction. The nodes are coloured dim gray with a filled style and a Helvetica font. The edges are coloured dim gray with a solid style, a 1.5 arrow size, a vee arrowhead and a Helvetica font.
}
\examples{
\donttest{
# EXAMPLE: use the LightGBM example dataset to build a model with a single tree
data(agaricus.train, package = "lightgbm")
train <- agaricus.train
dtrain <- lgb.Dataset(train$data, label = train$label)
data(agaricus.test, package = "lightgbm")
test <- agaricus.test
dtest <- lgb.Dataset.create.valid(dtrain, test$data, label = test$label)
# define model parameters and build a single tree
params <- list(
    objective = "regression",
    metric = "l2",
    min_data = 1L,
    learning_rate = 1.0
)
valids <- list(test = dtest)
model <- lgb.train(
    params = params,
    data = dtrain,
    nrounds = 1L,
    valids = valids,
    early_stopping_rounds = 1L
)
# plot the tree and compare to the tree table
# trees start from 0 in lgb.model.dt.tree
tree_table <- lgb.model.dt.tree(model)
lgb.plot.tree(model, 0)
}

}
